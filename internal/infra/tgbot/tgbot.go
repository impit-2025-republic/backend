package tgbot

import (
	"b8boost/backend/internal/entities"
	"fmt"
	"log"
	"time"

	tele "gopkg.in/telebot.v4"
)

type TgBot struct {
	bot      *tele.Bot
	userRepo entities.UserRepo
}

func NewTgBot(token string, userRepo entities.UserRepo) TgBot {
	pref := tele.Settings{
		Token:  token,
		Poller: &tele.LongPoller{Timeout: 10 * time.Second},
	}

	b, err := tele.NewBot(pref)
	if err != nil {
		panic(err)
	}

	return TgBot{
		bot:      b,
		userRepo: userRepo,
	}
}

func (b TgBot) SendMessage(userID int64, message string) {
	user, err := b.userRepo.GetByID(uint(userID))
	if err != nil {
		return
	}
	if user.TelegramID == nil || *user.TelegramID == 0 {
		return
	}
	recipient := &tele.User{ID: int64(*user.TelegramID)}

	b.bot.Send(recipient, message)
}

func (b TgBot) handleStart(c tele.Context) error {

	menuButton := &tele.MenuButton{
		Type:   "web_app",
		Text:   "–û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ",
		WebApp: &tele.WebApp{URL: "https://app.b8st.ru"},
	}
	if err := b.bot.SetMenuButton(c.Sender(), menuButton); err != nil {
		log.Printf("–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é: %v", err)
	}
	return c.Reply(fmt.Sprintf("–ü—Ä–∏–≤–µ—Ç! üëã \n–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞. –î–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∞—à telegram_id –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.\n–í–∞—à telegram_id: %d\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–∫–æ–ø–∏—Ä—É–π—Ç–µ —ç—Ç–æ—Ç –Ω–æ–º–µ—Ä –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –µ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ—É–Ω–∫—Ü–∏—è–º –±–æ—Ç–∞. –ü–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–∞—à–µ–≥–æ ID, –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç, –∏ –≤—ã —Å–º–æ–∂–µ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤—Å–µ–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏ –Ω–∞—à–µ–≥–æ —Å–µ—Ä–≤–∏—Å–∞.\n–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –≤–æ–ø—Ä–æ—Å—ã, –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.\n–ñ–µ–ª–∞–µ–º –ø—Ä–∏—è—Ç–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è!", c.Sender().ID))
}

func (b TgBot) Start() {
	b.bot.Handle("/start", b.handleStart)
	go b.bot.Start()
}
